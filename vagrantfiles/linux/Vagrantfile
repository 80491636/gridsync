# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.define "gridsync-linux"
  config.vm.box = "centos/7"
  config.vm.synced_folder ".", "/vagrant"
  config.vm.provider "virtualbox" do |vb|
    vb.gui = true
    vb.memory = "2048"
    vb.cpus = 2
    # Forward YubiKey to guest VM for signing
    vb.customize ["modifyvm", :id, "--usb", "on"]
    vb.customize ['usbfilter', 'add', '0',
      '--target', :id,
      '--name', "YubiKey",
      '--manufacturer', "Yubico",
      '--vendorid', "0x1050",
      '--productid', "0x0407",
      '--product', "Yubico YubiKey OTP+FIDO+CCID"]
  end
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    sudo yum -y update
    sudo yum -y install make gcc zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel tk-devel libffi-devel xz git xorg-x11-server-Xvfb gcc-c++
    sudo yum -y groupinstall "GNOME Desktop"
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > ~/rustup-init
    sh ~/rustup-init -y --default-host x86_64-unknown-linux-gnu --default-toolchain stable
    rm ~/rustup-init
    git clone https://github.com/pyenv/pyenv.git ~/.pyenv
    echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bash_profile
    echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bash_profile
    echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.bash_profile
    source ~/.bash_profile
    PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install 2.7.17
    PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install 3.8.2
    PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install 3.7.7
    PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install 3.6.10
    pyenv rehash
    pyenv global 2.7.17 3.7.7 3.8.2 3.6.10
    python2 -m pip install --upgrade setuptools pip
    python3 -m pip install --upgrade setuptools pip tox
    curl -L --create-dirs -o ~/bin/linuxdeploy https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
    chmod +x ~/bin/linuxdeploy
    curl -L --create-dirs -o ~/bin/appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
    chmod +x ~/bin/appimagetool
    sudo systemctl enable gdm
    sudo sh -c 'echo -e "[daemon]\nAutomaticLogin=vagrant\nAutomaticLoginEnable=True" > /etc/gdm/custom.conf'
    sudo systemctl set-default graphical.target
    sudo systemctl isolate graphical.target
  SHELL
  config.vm.provision "file", source: "../..", destination: "~/gridsync"
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    cd ~/gridsync && CI=true make test && make
    ls -al ~/gridsync/dist
  SHELL
  if ENV["BUILDBOT_HOST"]
    config.vm.provision "shell", privileged: false, inline: "python2 -m pip install buildbot-worker"
    config.vm.provision "shell" do |s|
      s.privileged = false
      s.inline = "buildbot-worker create-worker ~/buildbot $1 $2 $3"
      s.args   = "#{ENV['BUILDBOT_HOST']} #{ENV['BUILDBOT_NAME']} #{ENV['BUILDBOT_PASS']}"
    end
    config.vm.provision "shell", privileged: false, inline: "buildbot-worker restart ~/buildbot"
  end
end
